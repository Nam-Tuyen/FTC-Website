// /lib/club-faq.ts
// 8) C∆° h·ªôi th·ª±c t·∫≠p
{
patterns: ['thuc tap', 'co hoi thuc tap', 'tuyen dung', 'gioi thieu thuc tap'],
answer:
`üéØ **Th·ª±c t·∫≠p**: CLB k·∫øt n·ªëi doanh nghi·ªáp c√¥ng ngh·ªá ‚Äì t√†i ch√≠nh.\nTh√†nh vi√™n c√≥ s·∫£n ph·∫©m/d·ª± √°n & ƒë√≥ng g√≥p n·ªïi b·∫≠t s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n gi·ªõi thi·ªáu.`,
},


// 9) Li√™n h·ªá
{
patterns: ['lien he', 'hotline', 'email', 'facebook', 'fanpage'],
answer:
`üìÆ **Li√™n h·ªá**:\n‚Ä¢ Email: ${CONTACT_EMAIL}\n‚Ä¢ Fanpage: ${FANPAGE_URL}\nB·∫°n c√≥ th·ªÉ nh·∫Øn tr·ª±c ti·∫øp fanpage ‚ÄúFTC ‚Äì C√¢u l·∫°c b·ªô C√¥ng ngh·ªá ‚Äì T√†i ch√≠nh UEL‚Äù ho·∫∑c d√πng email tr√™n.`,
},
];


function scoreMatch(queryNorm: string, pattern: string) {
if (queryNorm.includes(pattern)) return 100;
const words = pattern.split(' ').filter(Boolean);
let hit = 0;
words.forEach((w) => {
if (queryNorm.includes(w)) hit += 1;
});
return Math.round((hit / Math.max(words.length, 1)) * 80);
}


export function matchClubFaq(userText: string): string | null {
const q = normalizeVi(userText);
let best = { idx: -1, score: 0 };
faq.forEach((item, i) => {
let s = 0;
item.patterns.forEach((p) => (s = Math.max(s, scoreMatch(q, p))));
if (s > best.score) best = { idx: i, score: s };
});
// ng∆∞·ª°ng m·ªÅm ƒë·ªÉ nh·∫≠n di·ªán √Ω g·∫ßn ƒë√∫ng
if (best.idx >= 0 && best.score >= 45) return faq[best.idx].answer;
return null;
}


export type IndustryDomain = 'fintech' | 'blockchain' | 'banking' | 'payments' | 'economics' | 'other';


const industryKeywords = [
'fintech', 'blockchain', 'smart contract', 'defi', 'dex', 'staking', 'yield',
'stablecoin', 'cbdc', 'on chain', 'off chain', 'wallet', 'kyc', 'aml',
'onramp', 'offramp', 'token', 'nft',
'ngan hang', 'banking', 'bank', 'core banking', 'open banking', 'payments', 'thanh toan',
'qr', 'pci dss', 'iso 20022', 'swift gpi', 'risk', 'fraud', 'chong gian lan',
'loan', 'tin dung', 'lai suat', 'interchange',
'machine learning', 'ai', 'ml', 'nlp', 'detect', 'churn', 'recommendation',
'chung khoan', 'chi so', 'trai phieu', 'trai phieu doanh nghiep', 'crypto', 'bitcoin', 'eth',
];


export function shouldRouteToIndustry(question: string): { yes: boolean; domain?: IndustryDomain } {
const q = normalizeVi(question);
const yes = industryKeywords.some((kw) => q.includes(normalizeVi(kw)));
let domain: IndustryDomain = 'other';
if (q.includes('blockchain') || q.includes('defi') || q.includes('smart contract') || q.includes('crypto')) domain = 'blockchain';
else if (q.includes('fintech')) domain = 'fintech';
else if (q.includes('ngan hang') || q.includes('bank')) domain = 'banking';
else if (q.includes('thanh toan') || q.includes('payments') || q.includes('qr')) domain = 'payments';
return { yes, domain };
}


export function getDefaultWelcomeMessage() {
return (
`Xin ch√†o! T√¥i l√† **FTC AI Assistant**.\n\nT√¥i c√≥ th·ªÉ gi√∫p b·∫°n:\n‚Ä¢ Tr·∫£ l·ªùi c√¢u h·ªèi v·ªÅ c√¢u l·∫°c b·ªô\n‚Ä¢ Gi·∫£i th√≠ch kh√°i ni·ªám Fintech\n‚Ä¢ H∆∞·ªõng d·∫´n tham gia ho·∫°t ƒë·ªông\n‚Ä¢ T√¨m th√¥ng tin tr√™n website\n\nüìÆ Li√™n h·ªá: ${CONTACT_EMAIL}\nüìò Fanpage: ${FANPAGE_URL}`
);
}


export function getBotFallbackAnswer(raw: string) {
return (
`M√¨nh ƒë√£ nh·∫≠n c√¢u h·ªèi: "${raw}". Hi·ªán ch∆∞a c√≥ th√¥ng tin chi ti·∫øt trong FAQ.\n\nB·∫°n c√≥ th·ªÉ:\n‚Ä¢ G·ª≠i mail: ${CONTACT_EMAIL}\n‚Ä¢ Nh·∫Øn fanpage: ${FANPAGE_URL}\n‚Ä¢ Th·ª≠ ƒë·∫∑t c√¢u h·ªèi kh√°c v·ªÅ th√†nh vi√™n, l·ªãch sinh ho·∫°t, h·ªçc thu·∫≠t, s·ª± ki·ªán, truy·ªÅn th√¥ng, t√†i ch√≠nh c√° nh√¢n, nh√¢n s·ª±‚Ä¶`
);
}
