"""
Script ch·∫°y chatbot t·ª´ command line
"""
import sys
import logging
from chatbot import FTCChatBot
from config import Config

def setup_logging():
    """Thi·∫øt l·∫≠p logging"""
    logging.basicConfig(
        level=getattr(logging, Config.LOG_LEVEL),
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )

def main():
    """H√†m ch√≠nh"""
    setup_logging()
    logger = logging.getLogger(__name__)
    
    print("ü§ñ FTC Chatbot - Command Line Interface")
    print("=" * 50)
    
    try:
        # Ki·ªÉm tra c·∫•u h√¨nh
        Config.validate()
        
        # Kh·ªüi t·∫°o chatbot
        chatbot = FTCChatBot()
        logger.info("Chatbot ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng")
        
        # Hi·ªÉn th·ªã th√¥ng tin h·ªá th·ªëng
        stats = chatbot.get_stats()
        print(f"Gemini API: {'‚úÖ Kh·∫£ d·ª•ng' if stats['gemini_available'] else '‚ùå Kh√¥ng kh·∫£ d·ª•ng'}")
        print()
        
        # Tin nh·∫Øn ch√†o m·ª´ng
        print("Bot:", chatbot.get_welcome_message())
        print("\nNh·∫≠p 'quit', 'exit' ho·∫∑c 'tho√°t' ƒë·ªÉ k·∫øt th√∫c")
        print("=" * 50)
        
        # V√≤ng l·∫∑p chat
        while True:
            try:
                user_input = input("\nüßë B·∫°n: ").strip()
                
                if user_input.lower() in ['quit', 'exit', 'tho√°t', 'q']:
                    break
                
                if not user_input:
                    print("‚ö†Ô∏è  Vui l√≤ng nh·∫≠p c√¢u h·ªèi.")
                    continue
                
                if user_input.lower() in ['clear', 'x√≥a l·ªãch s·ª≠']:
                    chatbot.clear_history()
                    print("‚úÖ ƒê√£ x√≥a l·ªãch s·ª≠ h·ªôi tho·∫°i.")
                    continue
                
                if user_input.lower() in ['stats', 'th·ªëng k√™']:
                    stats = chatbot.get_stats()
                    print(f"üìä Th·ªëng k√™:")
                    print(f"   - T·ªïng tin nh·∫Øn: {stats['total_messages']}")
                    print(f"   - Tin nh·∫Øn ng∆∞·ªùi d√πng: {stats['user_messages']}")
                    print(f"   - Tin nh·∫Øn bot: {stats['bot_messages']}")
                    print(f"   - Gemini API: {'Kh·∫£ d·ª•ng' if stats['gemini_available'] else 'Kh√¥ng kh·∫£ d·ª•ng'}")
                    continue
                
                # X·ª≠ l√Ω c√¢u h·ªèi
                print("ü§ñ Bot: ", end="", flush=True)
                response = chatbot.process_question(user_input)
                print(response)
                
            except KeyboardInterrupt:
                break
            except Exception as e:
                logger.error(f"L·ªói trong v√≤ng l·∫∑p chat: {e}")
                print(f"‚ùå L·ªói: {e}")
    
    except Exception as e:
        logger.error(f"L·ªói kh·ªüi t·∫°o: {e}")
        print(f"‚ùå L·ªói kh·ªüi t·∫°o chatbot: {e}")
        return 1
    
    print("\nüëã C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng FTC Chatbot!")
    return 0

if __name__ == "__main__":
    sys.exit(main())